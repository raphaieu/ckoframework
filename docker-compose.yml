version: '3.8'

services:
  # API PHP
  api:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: cko-api
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./api:/var/www/html:rw
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini:ro
    environment:
      - APP_ENV=development
      - DB_CONNECTION=sqlite
      - DB_DATABASE=/var/www/html/database/database.sqlite
    networks:
      - app-network
    user: "1000:1000"
    security_opt:
      - no-new-privileges:true
    depends_on:
      - frontend-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Vue (Desenvolvimento)
  frontend-dev:
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    container_name: cko-frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app:rw
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - app-network
    user: "1001:1001"
    working_dir: /app
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Nginx (Produção - opcional)
  frontend-prod:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: cko-frontend-prod
    restart: unless-stopped
    ports:
      - "3001:80"
    volumes:
      - ./frontend/dist:/var/www/html:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    user: "1000:1000"
    security_opt:
      - no-new-privileges:true
    profiles:
      - production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # SQLite (desenvolvimento padrão)
  sqlite:
    image: alpine:latest
    container_name: cko-sqlite
    restart: unless-stopped
    volumes:
      - ./api/database:/database
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        touch /database/database.sqlite &&
        chown 1000:1000 /database/database.sqlite &&
        tail -f /dev/null
      "
    networks:
      - app-network
    user: "1000:1000"

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  database:
  frontend_node_modules:
